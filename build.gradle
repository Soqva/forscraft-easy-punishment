plugins {
    id 'java'
    id 'net.minecraftforge.gradle' version '5.1.+'
    id 'org.jetbrains.kotlin.jvm' version '1.7.20-Beta'
}

group 'com.s0qva'
version = '1.0.1'

repositories {
    maven {
        url = "https://repo.essential.gg/repository/maven-public"
    }
}

configurations {
    inJar
    compileOnly.extendsFrom inJar
}

dependencies {
    minecraft 'net.minecraftforge:forge:1.12.2-14.23.5.2860'
    inJar 'gg.essential:vigilance-1.12.2-forge:253+pull-55'
    compileOnly 'org.jetbrains.kotlin:kotlin-stdlib-jdk8'
}

sourceSets.main.resources {
    srcDir 'src/generated/resources'
}

java {
    archivesBaseName = 'ForsCraftEasyPunishment-1.12.2'
    toolchain.languageVersion = JavaLanguageVersion.of(8)
}

minecraft {
    mappings channel: 'stable', version: '39-1.12'
    runs {
        client {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            mods {
                easypunishment {
                    source sourceSets.main
                }
            }
        }
        server {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            mods {
                easypunishment {
                    source sourceSets.main
                }
            }
        }
    }
}

jar {
    manifest {
        attributes([
                "Specification-Title"     : "easypunishment",
                "Specification-Vendor"    : "s0qva",
                "Specification-Version"   : "1",
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : project.jar.archiveVersion,
                "Implementation-Vendor"   : "s0qva",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
    from {
        duplicatesStrategy(DuplicatesStrategy.EXCLUDE)
        configurations.inJar.collect {
            it.isDirectory() ? it : zipTree(it)
        }
    }
}

compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

compileTestKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}
